// <auto-generated />
using System;
using EventLogin.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EventLogin.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20210825063714_changes2")]
    partial class changes2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("EventEntityUserEntity", b =>
                {
                    b.Property<Guid>("EventsId")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("UsersId")
                        .HasColumnType("TEXT");

                    b.HasKey("EventsId", "UsersId");

                    b.HasIndex("UsersId");

                    b.ToTable("EventEntityUserEntity");
                });

            modelBuilder.Entity("EventLogin.Entities.EventEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("Date")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("MaxUsers")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Event");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0869f4bb-a84a-478d-a71a-63ba3349dfba"),
                            Date = new DateTime(2021, 8, 25, 8, 37, 14, 45, DateTimeKind.Local).AddTicks(8800),
                            Location = "Berlin",
                            MaxUsers = 20,
                            Name = "Volksfest"
                        },
                        new
                        {
                            Id = new Guid("031f34a9-ab3c-4152-8381-06275c0e3cba"),
                            Date = new DateTime(2021, 8, 25, 8, 37, 14, 61, DateTimeKind.Local).AddTicks(3200),
                            Location = "Dortmund",
                            MaxUsers = 30,
                            Name = "Blackroom"
                        });
                });

            modelBuilder.Entity("EventLogin.Entities.UserEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<int>("DSize")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f0e9199e-490d-42e3-a2de-2d3f75fd57b4"),
                            DSize = 2,
                            Email = "fickwurst@schnitzel.de",
                            Name = "Peter"
                        },
                        new
                        {
                            Id = new Guid("41220f97-2a72-4c52-8078-61b3973eff5c"),
                            DSize = 12,
                            Email = "schnitzel@fickwurst.de",
                            Name = "Jürgen"
                        });
                });

            modelBuilder.Entity("EventLogin.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("EventEntityUserEntity", b =>
                {
                    b.HasOne("EventLogin.Entities.EventEntity", null)
                        .WithMany()
                        .HasForeignKey("EventsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EventLogin.Entities.UserEntity", null)
                        .WithMany()
                        .HasForeignKey("UsersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
